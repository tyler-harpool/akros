name: Deploy Docs to GitHub Pages

on:
  # Run after the NBA edge detection workflow
  workflow_run:
    workflows: ["NBA Edge Detection"]
    types:
      - completed

  # Run when docs or reports are updated directly
  push:
    paths:
      - 'docs/**'
      - 'reports/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Update index.html with latest reports
        run: |
          # Ensure docs directory exists
          mkdir -p docs

          # If index.html doesn't exist, create a base version
          if [ ! -f docs/index.html ]; then
            cat > docs/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>NBA Betting Recommendations</title>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                line-height: 1.6;
                padding: 20px;
                max-width: 1200px;
                margin: 0 auto;
              }
              .jumbotron {
                padding: 2rem;
                margin-bottom: 2rem;
                background-color: #e9ecef;
                border-radius: 0.3rem;
              }
              .report-item {
                margin-bottom: 10px;
                padding: 10px;
                border-left: 5px solid #0366d6;
                background-color: #f6f8fa;
              }
              .report-date {
                font-weight: bold;
              }
              .report-links {
                margin-left: 20px;
              }
              footer {
                margin-top: 30px;
                padding-top: 20px;
                border-top: 1px solid #eee;
                color: #777;
                font-size: 14px;
              }
            </style>
          </head>
          <body>
            <div class="jumbotron">
              <h1>NBA Betting Recommendations</h1>
              <p class="lead">Statistical edge detection for NBA betting markets</p>
              <p>Last updated: <span id="last-updated">DATE_PLACEHOLDER</span></p>
            </div>

            <div class="container">
              <div class="row">
                <div class="col-md-12">
                  <h2>Latest Reports</h2>
                  <div id="reports-list">
                    <!-- Reports will be listed here -->
                  </div>
                </div>
              </div>
            </div>

            <footer>
              <p>NBA Edge Detection System &copy; 2025</p>
              <p>Reports are generated daily using AI-powered edge detection algorithms.</p>
            </footer>
          </body>
          </html>
          EOL
          fi

          # Create .nojekyll file
          touch docs/.nojekyll

          # Update the last updated date in index.html
          current_date=$(date '+%B %d, %Y at %H:%M')
          sed -i "s|<span id=\"last-updated\">.*</span>|<span id=\"last-updated\">$current_date</span>|" docs/index.html

          # Generate reports list HTML
          reports_html=""

          # Loop through each date folder and add it to the reports list
          for date_dir in $(find reports -mindepth 1 -maxdepth 1 -type d | sort -r); do
            date_name=$(basename "$date_dir")

            # Format the date for display
            if [[ $date_name =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
              display_date=$(date -d "$date_name" "+%A, %B %d, %Y" 2>/dev/null || echo "$date_name")
            else
              display_date="$date_name"
            fi

            reports_html+="<div class=\"report-item\">"
            reports_html+="  <div class=\"report-date\">$display_date</div>"
            reports_html+="  <div class=\"report-links\">"

            # Loop through each report file in this date directory
            for report_file in $(find "$date_dir" -name "*.md" | sort -r); do
              file_name=$(basename "$report_file")
              file_path="../$report_file"

              # Clean up the file name for display
              display_name=$(echo "$file_name" | sed 's/\.md$//' | sed 's/_/ /g')

              reports_html+="    <div><a href=\"$file_path\" target=\"_blank\">$display_name</a></div>"
            done

            reports_html+="  </div>"
            reports_html+="</div>"
          done

          # Update the reports list in index.html
          sed -i "s|<div id=\"reports-list\">.*</div>|<div id=\"reports-list\">$reports_html</div>|" docs/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
